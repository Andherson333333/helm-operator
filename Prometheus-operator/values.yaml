kube-prometheus-stack:
  # Configuración para cada componente individualmente
  prometheusOperator:
    enabled: true
    nodeSelector:
      node-type: infrastructure
      workload-type: platform
    tolerations:
    - key: "workload-type"
      value: "infrastructure"
      effect: "PreferNoSchedule"

  prometheus:
    enabled: true
    prometheusSpec:
      retention: "15d"
      nodeSelector:
        node-type: infrastructure
        workload-type: platform
      tolerations:
      - key: "workload-type"
        value: "infrastructure"
        effect: "PreferNoSchedule"
      serviceMonitorSelector:
        matchLabels:
          release: prometheus-stack
      podMonitorSelector:
        matchLabels:
          release: prometheus-stack
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: gp3-default
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi

  grafana:
    enabled: true
    adminPassword: admin
    nodeSelector:
      node-type: infrastructure
      workload-type: platform
    tolerations:
    - key: "workload-type"
      value: "infrastructure"
      effect: "PreferNoSchedule"
    persistence:
      enabled: true
      storageClassName: gp3-default
      size: 10Gi

  alertmanager:
    enabled: true
    alertmanagerSpec:
      nodeSelector:
        node-type: infrastructure
        workload-type: platform
      tolerations:
      - key: "workload-type"
        value: "infrastructure"
        effect: "PreferNoSchedule"
      retention: 120h
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: gp3-default
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi

  kubeStateMetrics:
    nodeSelector:
      node-type: infrastructure
      workload-type: platform
    tolerations:
    - key: "workload-type"
      value: "infrastructure"
      effect: "PreferNoSchedule"

  # Node Exporter configurado específicamente para ejecutarse en TODOS los nodos
  nodeExporter:
    nodeSelector:
      kubernetes.io/os: linux
    tolerations:
    - operator: "Exists"

# Configuración de ingress sin cambios
ingress:
  prometheus:
    enabled: true
    className: nginx-external
    host: dev1-prometheus.andherson33.click
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    service:
      name: prometheus-stack-kube-prom-prometheus
      port: 9090
  grafana:
    enabled: true
    className: nginx-external
    host: dev1-grafana.andherson33.click
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    service:
      name: prometheus-stack-grafana
      port: 80
